<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
timer = 0;
timer1 = 0;
timer2 = 0;
timer3 = 0;
page = 0;
phase = 0;
credit = 0;
fade = 0.0;

instance_create(0, 0, objMusicControl);

if (page == 0 || page == 1 || page == 5) image_speed = 0.25;
else image_speed = 0.5;

Log1 = "BOOTED...#RAM OK...#ACCESSED ALL ASSETS...#GRAPHICS CHIP SET...#CONNECTED TO ONLINE SERVICES...#INITIALIZED...#FRAME RATE: 60...#ALL SYSTEMS READY...##INSERT COIN(S) &amp; PRESS START TO PLAY!";
Log2 = "CHIP: 2A03#SHADER: TUBE#CHARACTER: TBA#SYSTEM: NES";
Log3 = "CHIP: TBA#SHADER: SCANLINE#CHARACTER: MEGA MAN#SYSTEM: NES";
Log4 = "CHIP: YM2612#SHADER: CRT#CHARACTER: SONIC#SYSTEM: GENESIS / MEGA DRIVE";
Log5 = "CHIP: CPS-2#SHADER: GLITCH#CHARACTER: TBA#SYSTEM: ARCADE";
Log6 = "CHIP: CPU#SHADER: GBA COLOR#CHARACTER: TBA#SYSTEM: GAME BOY ADVANCE";
Log7 = "CHIP: CPU#SHADER: GAME BOY#CHARACTER: TBA#SYSTEM: GAME BOY";
Log8 = "COMING THIS SUMMER 2021#SPADYAL";
Log = "";
index = 1;

/*
Log1 = ds_list_create();
ds_list_add(Log1, "BOOTED...", "#RAM OK...", "#ACCESSED ALL ASSETS...", "#GRAPHICS CHIP SET...", "#CONNECTED TO ONLINE SERVICES...", "#INITIALIZED...", "#FRAME RATE: 60...", "#ALL SYSTEMS READY...", "##INSERT COIN(S) &amp; PRESS START TO PLAY!", "###########SPADYAL 2017-2021");
Log2 = ds_list_create();
ds_list_add(Log2, "CHIP: 2A03", "#SHADER: TUBE", "#CHARACTER: TBA", "#SYSTEM: NES");
Log3 = ds_list_create();
ds_list_add(Log3, "CHIP: TBA", "#SHADER: SCANLINE", "#CHARACTER: MEGA MAN", "#SYSTEM: NES");
Log4 = ds_list_create();
ds_list_add(Log4, "CHIP: YM2612", "#SHADER: CRT", "#CHARACTER: SONIC", "#SYSTEM: GENESIS / MEGA DRIVE");
Log5 = ds_list_create();
ds_list_add(Log5, "CHIP: CPS-2", "#SHADER: GLITCH", "#CHARACTER: TBA", "#SYSTEM: ARCADE");
Log6 = ds_list_create();
ds_list_add(Log6, "CHIP: CPU", "#SHADER: GBA COLOR", "#CHARACTER: TBA", "#SYSTEM: GAME BOY ADVANCE");
Log7 = ds_list_create();
ds_list_add(Log7, "CHIP: CPU", "#SHADER: GAME BOY", "#CHARACTER: TBA", "#SYSTEM: GAME BOY");

//var interval = random_range(0.08, 0.15);
//alarm[0] = room_speed * interval;

Screen1Text[0] = BOOTED...;
Screen1Text[1] = "RAM OK...";
Screen1Text[2] = "ACCESSED ALL ASSETS...";
Screen1Text[3] = "GRAPHICS CHIP SET...";
Screen1Text[4] = "CONNECTED TO ONLINE SERVICES...";
Screen1Text[5] = "INITIALIZED...";
Screen1Text[6] = "FRAME RATE: 60...";
Screen1Text[7] = "ALL SYSTEMS READY...";
Screen1Text[8] = "#INSERT COIN(S) &amp; PRESS START TO PLAY!";
Screen1Text[9] = "##########SPADYAL 2017-2021";
Screen2Text[1] = "CHIP: 2A03";
Screen2Text[2] = "SHADER: TUBE";
Screen2Text[3] = "CHARACTER: TBA";
Screen2Text[4] = "SYSTEM: NES";
Screen3Text[1] = "CHIP: S-SMP";
Screen3Text[2] = "SHADER: SCANLINE";
Screen3Text[3] = "CHARACTER: MEGA MAN";
Screen3Text[4] = "SYSTEM: NES";
Screen4Text[1] = "CHIP: YM2612";
Screen4Text[2] = "SHADER: CRT";
Screen4Text[3] = "CHARACTER: SONIC";
Screen4Text[4] = "SYSTEM: GENESIS / MEGA DRIVE";
Screen5Text[1] = "CHIP: CPS-2";
Screen5Text[2] = "SHADER: GLITCH";
Screen5Text[3] = "CHARACTER: TBA";
Screen5Text[4] = "SYSTEM: ARCADE";
Screen6Text[1] = "CHIP: CPU";
Screen6Text[2] = "SHADER: GBA COLOR";
Screen6Text[3] = "CHARACTER: TBA";
Screen6Text[4] = "SYSTEM: GAME BOY ADVANCE";
Screen7Text[1] = "CHIP: CPU";
Screen7Text[2] = "SHADER: GAME BOY";
Screen7Text[3] = "CHARACTER: TBA";
Screen7Text[4] = "SYSTEM: GAME BOY";
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
draw_set_font(MetalSlugHUD);
draw_set_color(c_white);
draw_set_halign(fa_left);
draw_text(16, 16, string(string_copy(Log1, 1, index)));
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (phase == 1) {
    Log += string_char_at(Log1, index);
    index += 1;
    if((index - 1) != string_length(Log1)) {
        alarm[0] = 2;
    }
} else if (phase == 2) {
    if (page == 0) {
        Log += string_char_at(Log2, index);
        index += 1;
        if((index - 1) != string_length(Log2)) {
            alarm[0] = 2;
        }
    }
    if (page == 1) {
        Log += string_char_at(Log3, index);
        index += 1;
        if((index - 1) != string_length(Log3)) {
            alarm[0] = 2;
        }
    }
    if (page == 2) {
        Log += string_char_at(Log4, index);
        index += 1;
        if((index - 1) != string_length(Log4)) {
            alarm[0] = 2;
        }
    }
    if (page == 3) {
        Log += string_char_at(Log5, index);
        index += 1;
        if((index - 1) != string_length(Log5)) {
            alarm[0] = 2;
        }
    }
    if (page == 4) {
        Log += string_char_at(Log6, index);
        index += 1;
        if((index - 1) != string_length(Log6)) {
            alarm[0] = 2;
        }
    }
    if (page == 5) {
        Log += string_char_at(Log7, index);
        index += 1;
        if((index - 1) != string_length(Log7)) {
            alarm[0] = 2;
        }
    }
    if (page == 6) {
        Log += string_char_at(Log8, index);
        index += 1;
        if((index - 1) != string_length(Log8)) {
            alarm[0] = 2;
        }
    }
}

/*
if (index &lt; string_length(Log1)) {
    index++;
    
    var interval = random_range(0.08, 0.15);
    //alarm[0] = room_speed * interval;
} else {
    //alarm[1] = room_speed * 2;
}
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>timer++;

/*if (index &lt; string_length(Log1)) {
    index++;
    var interval = random_range(0.08, 0.15);
}*/

if (phase == 0) {
}

//if (timer &gt;= room_speed * 3.0) {
    playMusic('endeavor-reveal.ogg', "OGG", 0, 0, 0, false, 100);
    
    if(keyboard_check_pressed(ord('Z')) &amp;&amp; credit &lt; 9 &amp;&amp; phase == 0) {
        credit++;
    }
    
    if(keyboard_check_pressed(vk_enter) &amp;&amp; credit &gt; 0 &amp;&amp; phase == 0) {
        alarm[0] = 1;
        phase = 1;
    }
    
    if (keyboard_check_pressed(vk_space) &amp;&amp; phase == 1) {
        phase = 2;
        Log = "";
        index = 1;
        timer1++;
    }
    
    if(keyboard_check_pressed(vk_left) &amp;&amp; phase == 2) {
        timer1 = 0;
        Log = "";
        index = 1;
        timer2 = 0;
        timer3 = 0;
        if (page != 0) {
            page--;
        } else {
            page = 6;
        }
    } else if (keyboard_check_pressed(vk_right) &amp;&amp; phase == 2) {
        timer1 = 0;
        Log = "";
        index = 1;
        timer2 = 0;
        if (page != 6) {
            page++;
        } else {
            page = 0;
        }
    }
//}

if (phase == 2) {
    timer1++;

    if (page == 0) {
        if(instance_exists(objPass)) instance_destroy(objPass);
        if(instance_exists(objScanline)) instance_destroy(objScanline);
        if(timer1 &gt;= room_speed * 1.7) instance_create(0, 0, objTube);
        alarm[0] = 1;
        
    }
    if (page == 1) {
        if(instance_exists(objTube)) instance_destroy(objTube);
        if(instance_exists(objCRTLottesMultipass)) instance_destroy(objCRTLottesMultipass);
        if(timer1 &gt;= room_speed * 1.7) instance_create(0, 0, objScanline);
        alarm[0] = 1;
        
    }
    if (page == 2) {
        if(instance_exists(objScanline)) instance_destroy(objScanline);
        if(instance_exists(objBktGlitch)) instance_destroy(objBktGlitch);
        if(timer1 &gt;= room_speed * 1.7) instance_create(0, 0, objCRTLottesMultipass);
        timer2++;
        alarm[0] = 1;
        
    }
    if (page == 3) {
        if(instance_exists(objCRTLottesMultipass)) instance_destroy(objCRTLottesMultipass);
        if(instance_exists(objGBA)) instance_destroy(objGBA);
        if(timer1 &gt;= room_speed * 1.7) instance_create(0, 0, objBktGlitch);
        alarm[0] = 1;
        
    }
    if (page == 4) {
        if(instance_exists(objBktGlitch)) instance_destroy(objBktGlitch);
        if(instance_exists(objPass)) instance_destroy(objPass);
        if(timer1 &lt; room_speed * 1.7){
            instance_create(0, 0, objPass);
        } else {
            instance_destroy(objPass);
            instance_create(0, 0, objGBA);
        }
        alarm[0] = 1;
        
    }
    if (page == 5) {
        if(instance_exists(objGBA)) instance_destroy(objGBA);
        if(!instance_exists(objPass)) instance_create(0, 0, objPass);
        else exit;
        //instance_create(0, 0, objPass);
        alarm[0] = 1;
            
    }
    if (page == 6) {
        //if(!instance_exists(objPass)) instance_create(0, 0, objPass);
        //else exit;
        if(instance_exists(objTube)) instance_destroy(objTube);
        timer2++;
        alarm[0] = 0;
        if (timer2 &gt;= room_speed * 3.4) alarm[0] = 1;
        if (timer2 &gt;= room_speed * 6.7) fade += 0.1;
        
    }
}

if(keyboard_check_pressed(vk_escape) || fade == 1.0) {
    game_end();
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw_set_font(Press_Start);
draw_set_color(c_white);
//draw_text(446, 561, "NES");

if (phase == 0) {
    draw_set_font(Nakadai);
    draw_set_halign(fa_center);
    draw_set_valign(fa_middle);
    //draw_set_halign(fa_left);
    draw_text(640, 360, "ENDEAVOR"); // 306, 321 // 331
    
    draw_set_font(MetalSlugHUD);
    draw_set_halign(fa_left);
    draw_text(16, 16, "######################################SPADYAL 2017-2021");
    draw_set_halign(fa_right);
    draw_text(1234, 676, "CREDIT 0" + string(credit));
}

if (phase == 1) {
    //draw_set_halign(fa_center);
    //draw_set_valign(fa_middle);
    //draw_sprite(sprBoot, image_index, 640, 320);
    draw_set_font(MetalSlugHUD);
    draw_set_halign(fa_left);
    draw_set_valign(fa_top);
    //draw_text(16, 16, "BOOTED...##RAM OK...#ACCESSED ALL ASSETS...#GRAPHICS CHIP SET...#CONNECTED TO ONLINE SERVICES...#INITIALIZED...#FRAME RATE: 60...#ALL SYSTEMS READY...##INSERT COIN(S) &amp; PRESS START TO PLAY!###########SPADYAL 2017-2021");
    //draw_text(16, 16, string(string_copy(Log1, 1, index)));
    draw_text(16, 16, Log);
}

if (phase == 2) {
    draw_set_font(MetalSlugHUD);
    if (timer &gt;= room_speed * 3.0) {
        if (page == 0) {
            draw_set_halign(fa_left);
            draw_set_valign(fa_top);
            //draw_text(16, 16, "#SHADER: TUBE#CHARACTER: TBA#SYSTEM: NES");
            draw_text(16, 16, Log);
            
            draw_sprite_ext(sprWRunning, image_index, 640, 540, 7, 7, 0, c_white, 1);
            draw_sprite(sprIndicators, 0, 640, 654);
        }
        
        if (page == 1) {
            draw_set_halign(fa_left);
            draw_text(16, 16, Log);
            draw_sprite_ext(sprMMWalking, image_index, 640, 540, 7, 7, 0, c_white, 1);
            draw_sprite(sprIndicators, 1, 640, 654);
        }
        
        if (page == 2) {
            draw_set_halign(fa_left);
            draw_text(16, 16, Log);
            if (timer2 &lt; room_speed * 1.0) draw_sprite_ext(sprSRunning, image_index, 640, 540, 7, 7, 0, c_white, 1);
            else if (timer2 &gt;= room_speed * 1.0) draw_sprite_ext(sprSSprinting, image_index, 640, 540, 7, 7, 0, c_white, 1);
            draw_sprite(sprIndicators, 2, 640, 654);
        }
        
        if (page == 3) {
            draw_set_halign(fa_left);
            draw_text(16, 16, Log);
            draw_sprite_ext(sprD, 0, 640, 475, 7, 7, 0, c_white, 1);
            draw_sprite(sprIndicators, 3, 640, 654);
        }
        
        if (page == 4) {
            draw_set_halign(fa_left);
            draw_text(16, 16, Log);
            draw_sprite_ext(sprBRunning, image_index, 640, 540, 7, 7, 0, c_white, 1);
            draw_sprite(sprIndicators, 4, 640, 654);
        }
        
        if (page == 5) {
            draw_set_halign(fa_left);
            draw_set_color(make_color_rgb(111, 143, 79));
            draw_text(16, 16, Log);
            //draw_set_color(make_color_rgb(15, 56, 15));
            //draw_rectangle(0, 0, 1280, 720, false);
            draw_sprite_ext(sprMRunning, image_index, 640, 540, 7, 7, 0, c_white, 1);
            draw_sprite(sprIndicators, 5, 640, 654);
        }
        
        if (page == 6) {
            draw_set_font(Nakadai);
            draw_set_halign(fa_center);
            //draw_set_halign(fa_left);
            draw_text(640, 321, "ENDEAVOR"); // 306, 321 // 331
            draw_set_font(MetalSlugHUD);
            /*if (timer2 &gt;= room_speed * 4.0)*/ draw_text(640, 491, Log);
            draw_sprite_ext(sprFadeOut, 0, 0, 0, 1, 1, 0, c_white, fade);
            /*if (timer2 &gt;= room_speed * 8.0) {
                draw_sprite_ext(sprFadeOut, 0, 0, 0, 1, 1, 0, c_white, fade);
            }*/
            
            draw_sprite(sprIndicators, 6, 640, 654);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
